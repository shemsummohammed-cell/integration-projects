

CREATE COMPUTE MODULE MSG_FLW_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		--CALL CopyEntireMessage();
		
		CREATE FIELD OutputRoot.XMLNSC.EMPINFO;
		
		--DECLARE INREF REFERENCE TO InputRoot.DFDL.EMPINFO.*[>];
		DECLARE INREF REFERENCE TO InputRoot.MRM.*[>];
		DECLARE OUTREF REFERENCE TO OutputRoot.XMLNSC.EMPINFO;
		
		WHILE LASTMOVE(INREF) DO
			CREATE LASTCHILD OF OUTREF NAME 'EMP';
			
		SET OUTREF.*[<].NAME = COALESCE(INREF.NAME,'NONAME');	
		SET OUTREF.*[<].SAL = COALESCE(INREF.SAL,'0');
		SET OUTREF.*[<].AGE = COALESCE(INREF.AGE,'0');
		SET OUTREF.*[<].TX = COALESCE(INREF.STATE,'TX');
		SET OUTREF.*[<].SSN = COALESCE(INREF.SSN,'0');
		SET OUTREF.*[<].ORG = COALESCE(INREF.ORG,'MAINOFFICE');
		SET OUTREF.*[<].ROLE = COALESCE(INREF.ROLE,'ONBENCH');
		
			MOVE INREF NEXTSIBLING;
		END WHILE;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
